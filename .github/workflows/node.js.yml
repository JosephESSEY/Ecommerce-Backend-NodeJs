name: Node.js CI Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  run-tests:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: ${{ secrets.DB_USER }}
          POSTGRES_PASSWORD: ${{ secrets.DB_PASSWORD }}
          POSTGRES_DB: ${{ secrets.DB_NAME }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      DB_URL: ${{ secrets.DB_URL }}
      DB_HOST: 127.0.0.1                # Utiliser localhost dans le container CI
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DB_PORT: 5432
      DB_NAME: ${{ secrets.DB_NAME }}
      PORT: ${{ secrets.PORT }}
      JWT_SECRET: ${{ secrets.JWT_SECRET }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm ci

      - name: Create .env file
        run: |
          echo "DB_URL=${{ secrets.DB_URL }}" >> .env
          echo "DB_HOST=127.0.0.1" >> .env
          echo "DB_USER=${{ secrets.DB_USER }}" >> .env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
          echo "DB_PORT=5432" >> .env
          echo "DB_NAME=${{ secrets.DB_NAME }}" >> .env
          echo "PORT=${{ secrets.PORT }}" >> .env
          echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env

      - name: Wait for PostgreSQL to be ready
        run: |
          for i in {1..10}; do
            nc -z 127.0.0.1 5432 && echo "Postgres is up!" && break
            echo "Waiting for postgres..." && sleep 3
          done

      - name: Run linter
        run: npm run lint

      - name: Run tests
        run: npm run test
